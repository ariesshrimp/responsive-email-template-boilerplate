@import 'settings';
@import 'foundation';

@import 'colors';
@import 'buttons';


// XXX:jmf All media queries MUST use !important specificity.
// Any CSS defined here will be inlined to the relevant elments,
// and nothing short of !important will be able to overwrite those styles
// at different breakpoints.

/**

    MAILCHIMP EDITABLE STYLES
    XXX:jmf These style blocks are parsed by Mailchimp via their comments.
    They appear as options in the rich text editor's "Style" dropdown.

**/

/*
@tab Type / Font
@section Body
@tip in-copy link styles
@style link
*/
a {
    color: #2199e8 ;
    font-family:'Helvetica Neue', 'Trebuchet MS', Helvetica, sans-serif;
    text-decoration: none;
}

/**

ELEMENTS

**/

.button {
  @extend %base-button-styles;
  display: block;
  text-align: center;
  margin-left: auto;
  margin-right: auto;
  letter-spacing: 0.03em;
}

.contact-info {
    font-size: 5px !important;
}

.footer {
    width: 100%;
    border-top-style: solid;
    border-top-color: #eeeeee;
    border-top-width: 1px;
    background-color: white;
}

.logo {
  width: 225px !important;
  margin-top: 30px;
  margin-bottom: 20px;
}

// XXX:jmf
// These styles are intended to hide a span containing inbox preview
// content from view in the body of the email.
// In case it's bothering you:
// mso-hide (MicroSoft Outlook...) ignores rules with !important specificity *shrug*
#preview-text {
    display: none !important;
    visibility: hidden !important;
    height: 0 !important;
    width: 0 !important;
    color: transparent !important;
    font-size: 0 !important;
    background-color: transparent !important;
    mso-hide: all;
}

.autograph {
    background-color: transparent;
}


/**

BASICS

**/

.background-color {
    background-color: #F5FBFF;
}

.body-content {
    border-top-style: solid;
    border-top-color: #eeeeee;
    border-top-width: 1px;
    border-bottom-style: solid;
    border-bottom-color: #eeeeee;
    border-bottom-width: 1px;
    border-left-style: solid;
    border-left-color: #eeeeee;
    border-left-width: 1px;
    border-right-style: solid;
    border-right-color: #eeeeee;
    border-right-width: 1px;

    // XXX:jmf only the very first <td> needs the padding,
    // but it's dynamically generated by the framework,
    // so I can't give it a classname.
    > tbody > tr > td {
        padding-left: 30px;
        padding-right: 30px;

        // XXX:jmf see comment at top of file for !important defense
        @media screen and (min-width: 520px) {
            padding-left: 60px !important;
            padding-right: 60px !important;
        }
    }
}

.padding-top {
    padding-top: 20px;
}

// XXX:jmf the idea is that on small screens the element consumes an entire line.
// This is a line-break in spirit.
// Then on larger screens it gets inlined again.
// This doesn't work on really old mail clients,
// because they don't support the display property.
// But they also don't have screens this small :]
.linebreak-responsive {
    display: block;

    @media screen and (min-width: 300px) {
        display: inline !important;
    }
}

/**

TYPOGRAPHY

**/

h1 {
  font-size: 22px;
  letter-spacing: 0.05em;
  font-weight: 500;
}

h6 {
  font-weight: 200;
  font-size: 16px;
  letter-spacing: 0.05em;
  color: $g50;
}

li, p, strong {
  font-size: 14px;
}

strong {
  color: $g20;

  a {
      font-weight: bold;
  }
}

.text-small {
    font-size: 10px !important;
    color: $g40;
    font-weight: 300;

    strong {
        font-weight: 500 !important;
    }
}

.link {
    color: $link-color;
    text-decoration: none;
    font-weight: inherit !important;
    font-size: inherit !important;
}
